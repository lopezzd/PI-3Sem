// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid()) @map("_id") @db.ObjectId
  email       String   @unique
  name        String
  password    String
  position    Position
  description String?
  role        Role     @default(USER)
  posts       Post[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("Users")
}

model Post {
  id        String    @id @default(cuid()) @map("_id") @db.ObjectId
  title     String
  content   String?
  published Boolean   @default(true)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String    @db.ObjectId
  category  Category  @default(MODERADO)
  status    Status    @default(ATIVO)
  address   String
  pictures  Picture[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("Posts")
}

model Picture {
  id     String @id @default(cuid()) @map("_id") @db.ObjectId
  post   Post   @relation(fields: [postId], references: [id])
  postId String @db.ObjectId
  path   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("Pictures")
}

enum Role {
  USER
  ADMIN
}

enum Position {
  GERENTE
  DESENVOLVEDOR
  ANALISTA
  TESTADOR
  MARKETING
  ESTAGIARIO
  COORDENADOR
}

enum Category {
  MUITO_BAIXO
  BAIXO
  MODERADO
  ALTO
  MUITO_ALTO
}

enum Status {
  ATIVO
  INATIVO
  EM_ANALISE
  REJEITADO
  CONCLUIDO
}
